/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { DeLetterBase, DeLetterBaseInterface } from "../DeLetterBase";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "arweaveAddress",
        type: "string",
      },
    ],
    name: "ArweaveAddressSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "arweaveAddress",
        type: "string",
      },
    ],
    name: "ArweaveAddressUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_addressList",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "arweaveAddress",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_arweaveAddress",
        type: "string",
      },
    ],
    name: "setArweaveAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_arweaveAddress",
        type: "string",
      },
    ],
    name: "updateArweaveAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061087b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063d40e480114610046578063e34c11be14610062578063ef4ab2d314610093575b600080fd5b610060600480360381019061005b9190610561565b6100af565b005b61007c60048036038101906100779190610538565b610225565b60405161008a92919061062a565b60405180910390f35b6100ad60048036038101906100a89190610561565b6102f1565b005b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461017e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101759061067c565b60405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010190805190602001906101d3929190610418565b503373ffffffffffffffffffffffffffffffffffffffff167f5ff86e56c4812e48a53e99b1f2a00dbf3dca0a209eedec74e92d9e5809fd9a328260405161021a919061065a565b60405180910390a250565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461026e9061078d565b80601f016020809104026020016040519081016040528092919081815260200182805461029a9061078d565b80156102e75780601f106102bc576101008083540402835291602001916102e7565b820191906000526020600020905b8154815290600101906020018083116102ca57829003601f168201915b5050505050905082565b336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010190805190602001906103c6929190610418565b503373ffffffffffffffffffffffffffffffffffffffff167fd8be721dcbc2fe996168596311b0f23494bb9563e4398c7bdace1e8a2310f53e8260405161040d919061065a565b60405180910390a250565b8280546104249061078d565b90600052602060002090601f016020900481019282610446576000855561048d565b82601f1061045f57805160ff191683800117855561048d565b8280016001018555821561048d579182015b8281111561048c578251825591602001919060010190610471565b5b50905061049a919061049e565b5090565b5b808211156104b757600081600090555060010161049f565b5090565b60006104ce6104c9846106cd565b61069c565b9050828152602081018484840111156104e657600080fd5b6104f184828561074b565b509392505050565b6000813590506105088161082e565b92915050565b600082601f83011261051f57600080fd5b813561052f8482602086016104bb565b91505092915050565b60006020828403121561054a57600080fd5b6000610558848285016104f9565b91505092915050565b60006020828403121561057357600080fd5b600082013567ffffffffffffffff81111561058d57600080fd5b6105998482850161050e565b91505092915050565b6105ab81610719565b82525050565b60006105bc826106fd565b6105c68185610708565b93506105d681856020860161075a565b6105df8161081d565b840191505092915050565b60006105f7601583610708565b91507f4f6e6c79206f776e65722063616e2075706461746500000000000000000000006000830152602082019050919050565b600060408201905061063f60008301856105a2565b818103602083015261065181846105b1565b90509392505050565b6000602082019050818103600083015261067481846105b1565b905092915050565b60006020820190508181036000830152610695816105ea565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156106c3576106c26107ee565b5b8060405250919050565b600067ffffffffffffffff8211156106e8576106e76107ee565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006107248261072b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b8381101561077857808201518184015260208101905061075d565b83811115610787576000848401525b50505050565b600060028204905060018216806107a557607f821691505b602082108114156107b9576107b86107bf565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61083781610719565b811461084257600080fd5b5056fea2646970667358221220d6ff0df36480a35ed897bb0faafab036a00985f208e98bafd107d32d3e57b54964736f6c63430008000033";

type DeLetterBaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeLetterBaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeLetterBase__factory extends ContractFactory {
  constructor(...args: DeLetterBaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DeLetterBase> {
    return super.deploy(overrides || {}) as Promise<DeLetterBase>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DeLetterBase {
    return super.attach(address) as DeLetterBase;
  }
  override connect(signer: Signer): DeLetterBase__factory {
    return super.connect(signer) as DeLetterBase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeLetterBaseInterface {
    return new utils.Interface(_abi) as DeLetterBaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeLetterBase {
    return new Contract(address, _abi, signerOrProvider) as DeLetterBase;
  }
}
